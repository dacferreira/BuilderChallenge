// <auto-generated />
using System;
using Builders.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Builders.Infrastructure.Migrations
{
    [DbContext(typeof(BuildersDbContext))]
    [Migration("20210402071258_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbo")
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Builders.Dominio.Entidades.ArvoreBusca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdArvoreBusca")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("ArvoreBusca");
                });

            modelBuilder.Entity("Builders.Dominio.Entidades.NoArvore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("IdNoArvore")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Altura");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime");

                    b.Property<int>("IdArvoreBusca");

                    b.Property<int?>("IdNoDireito");

                    b.Property<int?>("IdNoEsquerdo");

                    b.Property<int>("Numero");

                    b.HasKey("Id");

                    b.HasIndex("IdArvoreBusca")
                        .IsUnique();

                    b.HasIndex("IdNoDireito")
                        .IsUnique()
                        .HasFilter("[IdNoDireito] IS NOT NULL");

                    b.HasIndex("IdNoEsquerdo")
                        .IsUnique()
                        .HasFilter("[IdNoEsquerdo] IS NOT NULL");

                    b.ToTable("NoArvore");
                });

            modelBuilder.Entity("Builders.Dominio.Entidades.NoArvore", b =>
                {
                    b.HasOne("Builders.Dominio.Entidades.ArvoreBusca", "ArvoreBusca")
                        .WithOne("Raiz")
                        .HasForeignKey("Builders.Dominio.Entidades.NoArvore", "IdArvoreBusca")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Builders.Dominio.Entidades.NoArvore", "NoDireito")
                        .WithOne()
                        .HasForeignKey("Builders.Dominio.Entidades.NoArvore", "IdNoDireito");

                    b.HasOne("Builders.Dominio.Entidades.NoArvore", "NoEsquerdo")
                        .WithOne()
                        .HasForeignKey("Builders.Dominio.Entidades.NoArvore", "IdNoEsquerdo");
                });
#pragma warning restore 612, 618
        }
    }
}
